package presentation.data;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import business.customersubsystem.CustomerSubsystemFacade;
import business.exceptions.BackendException;
import business.externalinterfaces.CustomerSubsystem;
import business.externalinterfaces.Order;
import business.externalinterfaces.OrderSubsystem;
import business.ordersubsystem.OrderSubsystemFacade;
import business.usecasecontrol.BrowseAndSelectController;
import business.usecasecontrol.ViewOrdersController;
import presentation.util.Util;

public enum ViewOrdersData {
	INSTANCE;
	private OrderPres selectedOrder;
	public OrderPres getSelectedOrder() {
		return selectedOrder;
	}
	public void setSelectedOrder(OrderPres so) {
		selectedOrder = so;
	}
	
	public List<OrderPres> getOrderList() throws BackendException {
	
		/*CustomerSubsystem css = new CustomerSubsystemFacade(); 
		css.initializeCustomer(1, 4);
		OrderSubsystem oss = new OrderSubsystemFacade(css.getCustomerProfile());
		
		List<OrderPres> orderpres = new ArrayList<>();
		
		try {
			List<Order> oList = oss.getOrderHistory();
			for(Order ol:oList){
				OrderPres op = new OrderPres();
				op.setOrder(ol);
				orderpres.add(op);
			}
		} catch (BackendException e) {
			e.printStackTrace();
		}
		return orderpres;*/
	
		
		CustomerSubsystem cust =  DataUtil.readCustFromCache();// new CustomerSubsystemFacade(); 
		return ViewOrdersController.INSTANCE.getOrderHistory(cust)
		    .stream()
		    .map(order -> Util.orderToOrderPres(order))
		    .collect(Collectors.toList());

	}
	
	//public List<OrderItemPres> getOrderListDetail() throws BackendException{
		
	//}
}
